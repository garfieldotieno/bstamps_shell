// Mock data

// always update on page refresh
const sessionData = {
    activity_json: {
        current_intent: 'Landing_page'
    }
};

const resourceData = [
    { id: 1, public: true, item_media_url: 'landing_images/sample3.jpg', title: 'Item 1', price: 100, name: 'Item One', description: 'Description of Item One' },
    { id: 2, public: true, item_media_url: 'landing_images/sample4.jpg', title: 'Item 2', price: 200, name: 'Item Two', description: 'Description of Item Two' },
    { id: 3, public: true, item_media_url: 'landing_images/doom.jpeg', title: 'Item 3', price: 200, name: 'Item Three', description: 'Description of Item Three' }
];


const botView = {
    current_bot_screen_media: ['./static/bot_media/wake_up_big.gif', './static/bot_media/wake_up_small.gif'],
    current_bot_buttons: [
        [
            { id: 'check_in', label: 'Check-in', icon: 'fa-solid fa-right-to-bracket' },
            { id: 'shop', label: 'Shop', icon: 'fa-brands fa-searchengin' },
            { id: 'wallet', label: 'Wallet', icon: 'fa-solid fa-wallet' }
        ],
        [
            { id: 'call', label: 'Call', icon: 'fa-solid fa-phone' },
            { id: 'mail', label: 'Mail', icon: 'fa-solid fa-envelope' },
            { id: 'about', label: 'About', icon: 'fa-solid fa-info-circle' }
        ]
    ],
    current_middle_button: [
        [
            { id: 'refresh', label: 'Refresh', icon: 'fa-solid fa-refresh' },
            { id: 'camera', label: 'Scanner', icon: 'fa-solid fa-camera' }
        ]
    ],
    current_game_button: [
        [
            { id: 'games', label: 'Games', icon: 'fa-solid fa-gamepad' }
        ]
    ],
    
    current_checkin_base_buttons: [
        { id: 'redeem', label: 'Redeem', icon: 'fa-solid fa-gift' },
        { id: 'purchase', label: 'Purchase', icon: 'fa-solid fa-money-bill-wave'},
        { id: 'base_cancel', label: 'Cancel', icon: 'fa-solid fa-rectangle-xmark'}
    ],

    current_checkin_info:{
        title: "Authentication",
        content: "Inorder to access more features, authenticate yourself by entering redeem code or purchasing a session of your interest"
    },

    current_shop_base_buttons : [
        { id: 'update_location', label: 'Location', icon: 'fa-solid fa-location-crosshairs'},
        { id: 'shop_cart', label: 'Cart', icon: 'fa-solid fa-cart-shopping' },
        { id: 'base_cancel', label: 'Cancel', icon: 'fa-solid fa-rectangle-xmark'}
    ],

    current_shop_info: {
        title: "Shopping",
        content: 'Shopping information'
    },

    current_wallet_base_buttons: [
        { id: 'mpesa', label: 'Mpesa', icon: 'fa-solid fa-money-bill'},
        { id: 'blockchain_minima', label: 'Minima', icon: 'fa-solid fa-bolt-lightning'},
        { id: 'base_cancel', label: 'Cancel', icon: 'fa-solid fa-rectangle-xmark'}
    ],

    current_wallet_info : {
        title: "Wallet",
        content: "Our wallet allows you keep track of money and points when you shop and participate in other activities in the bot"
    },

    current_scanner_base_buttons: [
        { id: 'take_photo', label: 'Capture', icon: 'fa-solid fa-camera'},
        { id: 'base_cancel', label: 'Cancel', icon: 'fa-solid fa-rectangle-xmark'}
    ],

    current_scanner_info : {
        title: "Scanner",
        content: "Our scanner allows you to take pictures, scan qr codes and also pdfs"
    },

    current_about_base_buttons : [
        { id: 'base_cancel', label: 'Cancel', icon: 'fa-solid fa-rectangle-xmark'}
    ],

    current_about_info:{
        title: "About",
        content: "K-VCR is a series bot, designed to help you achieve essential utilities while on the  internet"
    },

    current_checkin_redeem_buttons : [
        { id: 'checkin_redeem_copy', label: 'Paste', icon: 'fa-solid fa-paste'},
        { id: 'checkin_redeem_submit', label: 'Submit', icon: 'fa-solid fa-arrow-right'},
        { id: 'second_cancel', label: 'Cancel', icon: 'fa-solid fa-rectangle-xmark'}
    ],

    current_checkin_redeem_info: {
        title: "Redeem",
        content: "Redeem Session by pasting the code you recieved, generated by our system, select the session first",
        input : [
            {type:'select', list: [
                {label: 'customer', value: 'select_customer'},
                {label:'vendor', value:'select_vendor'}
            ]}
        ]
    },

    current_checkin_purchase_buttons : [
        { id: 'checkin_purchase_copy', label: 'Paste', icon: 'fa-solid fa-paste'},
        { id: 'checkin_purchase_submit', label: 'Submit', icon: 'fa-solid fa-arrow-right'},
        { id: 'second_cancel', label: 'Cancel', icon: 'fa-solid fa-rectangle-xmark'}
    ],

    current_checkin_purchase_info: {
        title: "Purchase",
        content: "Purchase session using Mpesa,select the type of session first",
        input: [
            {type:'select', list: [
                {label: 'customer', value: 'select_customer'},
                {label:'vendor', value:'select_vendor'}
            ]}
        ]
    }
     


};

    
function make_items_of_sale_view(){
    console.log("make items of sale called")
    const itemCardContainer = document.getElementById('itemCardContainer');
    resourceData.forEach(item => {
        if (item.public) {
            const card = document.createElement('div');
            card.classList.add('item_card');
            card.innerHTML = `
                <img class="item_card_image" src="./static/media_store/${item.item_media_url}" alt="${item.title}">
                <div class="item_info">
                    <div class="item_info_title">
                        <h3 class="item_title">${item.title}</h3>
                        <p class="item_price">Ksh ${item.price}</p>
                    </div>
                    <p class="item_name">${item.name}</p>
                    <p class="item_description">${item.description}</p>
                </div>
                <form class="item_get_button_layer itemForm">
                    <input type="hidden" name="make_order_item_id" value="${item.id}">
                    <button class="item_get_button">Get</button>
                </form>
            `;
            itemCardContainer.appendChild(card);
        }
    });
}

function show_remaining_buttons(){
    console.log('showing remianing buttons')

    const botButtonStackMiddle = document.getElementById('botButtonStackMiddle');

    botView.current_middle_button[0].forEach(button => {
        const buttonBig = document.createElement('div');
        buttonBig.classList.add('bot_button_layer');
        buttonBig.innerHTML = `
        <input type="hidden" name="intent" value="${button.label}">
            <button class="bot_button" id="${button.id}" onclick="process_button_master(this)">
                <div class="row">
                    <div class="col-8">
                        <span class="type-label">${button.label}</span>
                    </div>
                    <div class="col-4">
                        <span class="type_label"><i class="${button.icon}"></i></span>
                    </div>
                </div>
            </button>
        `;

        botButtonStackMiddle.appendChild(buttonBig);
    });

    const botButtonStackContact = document.getElementById('botButtonStackContact');

    botView.current_bot_buttons[1].forEach(button => {
        const buttonBig = document.createElement('div');
        buttonBig.classList.add('bot_button_layer');
        buttonBig.innerHTML = `
        <input type="hidden" name="intent" value="${button.label}">
            <button class="bot_button" id="${button.id}" onclick="process_button_master(this)">
                <div class="row">
                    <div class="col-8">
                        <span class="type-label">${button.label}</span>
                    </div>
                    <div class="col-4">
                        <span class="type_label"><i class=" ${button.icon}"></i></span>
                    </div>
                </div>
            </button>
        `;

        botButtonStackContact.appendChild(buttonBig);
    });

}

function show_big_screen_context_btns(){
    console.log('showing additional buttons for big screen bot');
    // show expected layout
    // populate item cards
    make_items_of_sale_view()

    // Populate the bot screen and buttons
    document.getElementById('botScreenBig').src = botView.current_bot_screen_media[1];
       

    process_render()
}

function show_first_active(){
    console.log('calling show_first_active');

    const botButtonStackBig = document.getElementById('botButtonStackBig');

    botButtonStackBig.innerHTML=""
    
    button_list = [botView.current_bot_buttons[0][0]]

    
    button_list.forEach(button => {
        const buttonBig = document.createElement('div')
        buttonBig.classList.add('bot_button_layer');
        buttonBig.innerHTML = `
            <input type="hidden" name="intent" value="${button.label}">
            <button class="bot_button" id="${button.id}" onclick="process_button_master(this)">
                <div class="row">
                    <div class="col-8">
                        <span class="type-label">${button.label}</span>
                    </div>
                    <div class="col-4">
                        <span class="type_label"><i class="${button.icon}"></i></span>
                    </div>
                </div>
            </button>
        `;
        botButtonStackBig.appendChild(buttonBig);
    });

    button_list2 = [botView.current_middle_button[0][1]];

    const botButtonStackMiddle = document.getElementById('botButtonStackMiddle');
    botButtonStackMiddle.innerHTML=""

    button_list2.forEach(button => {
        const buttonBig = document.createElement('div');
        buttonBig.classList.add('bot_button_layer');
        buttonBig.innerHTML = `
        <input type="hidden" name="intent" value="${button.label}">
            <button class="bot_button" id="${button.id}" onclick="process_button_master(this)">
                <div class="row">
                    <div class="col-8">
                        <span class="type-label">${button.label}</span>
                    </div>
                    <div class="col-4">
                        <span class="type_label"><i class="${button.icon}"></i></span>
                    </div>
                </div>
            </button>
        `;

        botButtonStackMiddle.appendChild(buttonBig);
    });

    const botButtonStackContact = document.getElementById('botButtonStackContact');
    botButtonStackContact.innerHTML=""

    botView.current_bot_buttons[1].forEach(button => {
        const buttonBig = document.createElement('div');
        buttonBig.classList.add('bot_button_layer');
        buttonBig.innerHTML = `
        <input type="hidden" name="intent" value="${button.label}">
            <button class="bot_button" id="${button.id}" onclick="process_button_master(this)">
                <div class="row">
                    <div class="col-8">
                        <span class="type-label">${button.label}</span>
                    </div>
                    <div class="col-4">
                        <span class="type_label"><i class=" ${button.icon}"></i></span>
                    </div>
                </div>
            </button>
        `;

        botButtonStackContact.appendChild(buttonBig);
    });

}

function show_first_inactive(){
    console.log('calling show_first_inactive');

    const botButtonStackBig = document.getElementById('botButtonStackBig');
    botButtonStackBig.innerHTML=""
    
    button_list = [botView.current_bot_buttons[0][0]]

    button_list.forEach(button => {
        const buttonBig = document.createElement('div');
        buttonBig.classList.add('bot_button_layer');
        buttonBig.innerHTML = `
            <input type="hidden" name="intent" value="${button.label}">
            <button class="bot_button" id="${button.id}" onclick="process_button_master(this)">
                <div class="row">
                    <div class="col-8">
                        <span class="type-label">${button.label}</span>
                    </div>
                    <div class="col-4">
                        <span class="type_label"><i class="${button.icon}"></i></span>
                    </div>
                </div>
            </button>
        `;
        botButtonStackBig.appendChild(buttonBig);
    });

    button_list2 = [botView.current_middle_button[0][1]];

    const botButtonStackMiddle = document.getElementById('botButtonStackMiddle');
    botButtonStackMiddle.innerHTML=""

    button_list2.forEach(button => {
        const buttonBig = document.createElement('div');
        buttonBig.classList.add('bot_button_layer');
        buttonBig.innerHTML = `
        <input type="hidden" name="intent" value="${button.label}">
            <button class="bot_button" id="${button.id}" onclick="process_button_master(this)">
                <div class="row">
                    <div class="col-8">
                        <span class="type-label">${button.label}</span>
                    </div>
                    <div class="col-4">
                        <span class="type_label"><i class="${button.icon}"></i></span>
                    </div>
                </div>
            </button>
        `;

        botButtonStackMiddle.appendChild(buttonBig);
    });

    const botButtonStackContact = document.getElementById('botButtonStackContact');
    botButtonStackContact.innerHTML=""

    botView.current_bot_buttons[1].forEach(button => {
        const buttonBig = document.createElement('div');
        buttonBig.classList.add('bot_button_layer');
        buttonBig.innerHTML = `
        <input type="hidden" name="intent" value="${button.label}">
            <button class="bot_button" id="${button.id}" onclick="process_button_master(this)">
                <div class="row">
                    <div class="col-8">
                        <span class="type-label">${button.label}</span>
                    </div>
                    <div class="col-4">
                        <span class="type_label"><i class=" ${button.icon}"></i></span>
                    </div>
                </div>
            </button>
        `;

        botButtonStackContact.appendChild(buttonBig);
    });

}

function show_customer_active(){
    console.log('calling show_customer_active');

    const botButtonStackBig = document.getElementById('botButtonStackBig');
    botButtonStackBig.innerHTML=""
    
    button_list = botView.current_bot_buttons[0]

    button_list.forEach(button => {
        const buttonBig = document.createElement('div');
        buttonBig.classList.add('bot_button_layer');
        buttonBig.innerHTML = `
            <input type="hidden" name="intent" value="${button.label}">
            <button class="bot_button" id="${button.id}" onclick="process_button_master(this)">
                <div class="row">
                    <div class="col-8">
                        <span class="type-label">${button.label}</span>
                    </div>
                    <div class="col-4">
                        <span class="type_label"><i class="${button.icon}"></i></span>
                    </div>
                </div>
            </button>
        `;
        botButtonStackBig.appendChild(buttonBig);
    });

    button_list2 = botView.current_middle_button[0]

    const botButtonStackMiddle = document.getElementById('botButtonStackMiddle');
    botButtonStackMiddle.innerHTML = ""

    button_list2.forEach(button => {
        const buttonBig = document.createElement('div');
        buttonBig.classList.add('bot_button_layer');
        buttonBig.innerHTML = `
        <input type="hidden" name="intent" value="${button.label}">
            <button class="bot_button" id="${button.id}" onclick="process_button_master(this)">
                <div class="row">
                    <div class="col-8">
                        <span class="type-label">${button.label}</span>
                    </div>
                    <div class="col-4">
                        <span class="type_label"><i class="${button.icon}"></i></span>
                    </div>
                </div>
            </button>
        `;

        botButtonStackMiddle.appendChild(buttonBig);
    });

    const botButtonStackContact = document.getElementById('botButtonStackContact');
    botButtonStackContact.innerHTML = ""

    botView.current_bot_buttons[1].forEach(button => {
        const buttonBig = document.createElement('div');
        buttonBig.classList.add('bot_button_layer');
        buttonBig.innerHTML = `
        <input type="hidden" name="intent" value="${button.label}">
            <button class="bot_button" id="${button.id}" onclick="process_button_master(this)">
                <div class="row">
                    <div class="col-8">
                        <span class="type-label">${button.label}</span>
                    </div>
                    <div class="col-4">
                        <span class="type_label"><i class=" ${button.icon}"></i></span>
                    </div>
                </div>
            </button>
        `;

        botButtonStackContact.appendChild(buttonBig);
    });
}

function show_customer_inactive(){
    console.log('calling show_customer_inactive');
    show_first_active();
}

function show_vendor_active(){
    console.log('calling show_vendor_active');

    const botButtonStackBig = document.getElementById('botButtonStackBig');
    botButtonStackBig.innerHTML=""
    
    button_list = botView.current_bot_buttons[0]

    button_list.forEach(button => {
        const buttonBig = document.createElement('div');
        buttonBig.classList.add('bot_button_layer');
        buttonBig.innerHTML = `
            <input type="hidden" name="intent" value="${button.label}">
            <button class="bot_button" id="${button.id}" onclick="process_button_master(this)">
                <div class="row">
                    <div class="col-8">
                        <span class="type-label">${button.label}</span>
                    </div>
                    <div class="col-4">
                        <span class="type_label"><i class="${button.icon}"></i></span>
                    </div>
                </div>
            </button>
        `;
        botButtonStackBig.appendChild(buttonBig);
    });

    button_list2 = botView.current_middle_button[0]

    const botButtonStackMiddle = document.getElementById('botButtonStackMiddle');
    botButtonStackMiddle.innerHTML=""

    button_list2.forEach(button => {
        const buttonBig = document.createElement('div');
        buttonBig.classList.add('bot_button_layer');
        buttonBig.innerHTML = `
        <input type="hidden" name="intent" value="${button.label}">
            <button class="bot_button" id="${button.id}" onclick="process_button_master(this)">
                <div class="row">
                    <div class="col-8">
                        <span class="type-label">${button.label}</span>
                    </div>
                    <div class="col-4">
                        <span class="type_label"><i class="${button.icon}"></i></span>
                    </div>
                </div>
            </button>
        `;

        botButtonStackMiddle.appendChild(buttonBig);
    });

    const botButtonStackContact = document.getElementById('botButtonStackContact');
    botButtonStackContact.innerHTML=""

    botView.current_bot_buttons[1].forEach(button => {
        const buttonBig = document.createElement('div');
        buttonBig.classList.add('bot_button_layer');
        buttonBig.innerHTML = `
        <input type="hidden" name="intent" value="${button.label}">
            <button class="bot_button" id="${button.id}" onclick="process_button_master(this)">
                <div class="row">
                    <div class="col-8">
                        <span class="type-label">${button.label}</span>
                    </div>
                    <div class="col-4">
                        <span class="type_label"><i class=" ${button.icon}"></i></span>
                    </div>
                </div>
            </button>
        `;

        botButtonStackContact.appendChild(buttonBig);
    });
    
}

function show_vendor_inactive(){
    console.loge('calling show_vendor_inactive');
    show_first_active();
}

function fold_bot_start_display() {
    console.log('folding bot');

    // Hide botButtonStackBig
    const botButtonStackBig = document.getElementById("botButtonStackBig");
    if (botButtonStackBig) {
        botButtonStackBig.style.display = "none";
        console.log("Hidden botButtonStackBig");
    } else {
        console.log("botButtonStackBig element not found");
    }

    // Hide botButtonStackMiddle
    const botButtonStackMiddle = document.getElementById("botButtonStackMiddle");
    if (botButtonStackMiddle) {
        botButtonStackMiddle.style.display = "none";
        console.log("Hidden botButtonStackMiddle");
    } else {
        console.log("botButtonStackMiddle element not found");
    }

    // Hide botButtonStackContact
    const botButtonStackContact = document.getElementById("botButtonStackContact");
    if (botButtonStackContact) {
        botButtonStackContact.style.display = "none";
        console.log("Hidden botButtonStackContact");
    } else {
        console.log("botButtonStackContact element not found");
    }
}


function show_checkin_base_navigation(){
    console.log('calling checkin base navigation button');
    // change botNavigation to block
    const botNavigation = document.getElementById("botNavigation");
    if (botNavigation){
        botNavigation.style.display = "block";

        botView.current_checkin_base_buttons.forEach(button => {
            const buttonBig = document.createElement('div');
            buttonBig.classList.add('bot_button_layer');
            buttonBig.innerHTML = `
                <input type="hidden" name="intent" value="${button.label}">
                <button class="bot_button" id="${button.id}" onclick="process_button_master(this)">
                    <div class="row">
                        <div class="col-8">
                            <span class="type-label">${button.label}</span>
                        </div>
                        <div class="col-4">
                            <span class="type_label"><i class="${button.icon}"></i></span>
                        </div>
                    </div>
                </button>
            `;

            botNavigation.appendChild(buttonBig);
        });


    }

    
}

function show_checkin_info(){
    console.log('calling show_checkin_info');

    const botInfoDisplay = document.getElementById('botInfoDisplay');

    if(botInfoDisplay){
        botInfoDisplay.style.display = "block";
        botInfoDisplay.innerHTML=`
        <h5 class="bot_header">${botView.current_checkin_info.title}</h5>
        <p class="bot_header">${botView.current_checkin_info.content}</p>
        `
    }

}




function show_shop_base_navigation(){
    console.log('calling show_shop_base_navigation');

    const botNavigation = document.getElementById("botNavigation");
    if (botNavigation){
        botNavigation.style.display = "block";

        botView.current_shop_base_buttons.forEach(button => {
            const buttonBig = document.createElement('div');
            buttonBig.classList.add('bot_button_layer');
            buttonBig.innerHTML = `
                <input type="hidden" name="intent" value="${button.label}">
                <button class="bot_button" id="${button.id}" onclick="process_button_master(this)">
                    <div class="row">
                        <div class="col-8">
                            <span class="type-label">${button.label}</span>
                        </div>
                        <div class="col-4">
                            <span class="type_label"><i class="${button.icon}"></i></span>
                        </div>
                    </div>
                </button>
            `;

            botNavigation.appendChild(buttonBig);
        });


    }


}


function show_shop_info(){
    console.log('calling show_shop_info');

    const botInfoDisplay = document.getElementById('botInfoDisplay');

    if(botInfoDisplay){
        botInfoDisplay.style.display = "block";
        botInfoDisplay.innerHTML=`
        <h5 class="bot_header">${botView.current_shop_info.title}</h5>
        <p class="bot_header">${botView.current_shop_info.content}</p>
        `
    }
}


function show_wallet_base_navigation(){
    console.log('calling show_wallet_base_navigation');

    const botNavigation = document.getElementById("botNavigation");
    if (botNavigation){
        botNavigation.style.display = "block";

        botView.current_wallet_base_buttons.forEach(button => {
            const buttonBig = document.createElement('div');
            buttonBig.classList.add('bot_button_layer');
            buttonBig.innerHTML = `
                <input type="hidden" name="intent" value="${button.label}">
                <button class="bot_button" id="${button.id}" onclick="process_button_master(this)">
                    <div class="row">
                        <div class="col-8">
                            <span class="type-label">${button.label}</span>
                        </div>
                        <div class="col-4">
                            <span class="type_label"><i class="${button.icon}"></i></span>
                        </div>
                    </div>
                </button>
            `;

            botNavigation.appendChild(buttonBig);
        });


    }
}

function show_wallet_info(){
    console.log('calling show_wallet_info');

    const botInfoDisplay = document.getElementById('botInfoDisplay');

    if(botInfoDisplay){
        botInfoDisplay.style.display = "block";
        botInfoDisplay.innerHTML=`
        <h5 class="bot_header">${botView.current_wallet_info.title}</h5>
        <p class="bot_header">${botView.current_wallet_info.content}</p>
        `
    }

}


function show_scanner_base_navigation(){
    console.log('calling show_scanner_base_navigation');

    const botNavigation = document.getElementById("botNavigation");
    if (botNavigation){
        botNavigation.style.display = "block";

        botView.current_scanner_base_buttons.forEach(button => {
            const buttonBig = document.createElement('div');
            buttonBig.classList.add('bot_button_layer');
            buttonBig.innerHTML = `
                <input type="hidden" name="intent" value="${button.label}">
                <button class="bot_button" id="${button.id}" onclick="process_button_master(this)">
                    <div class="row">
                        <div class="col-8">
                            <span class="type-label">${button.label}</span>
                        </div>
                        <div class="col-4">
                            <span class="type_label"><i class="${button.icon}"></i></span>
                        </div>
                    </div>
                </button>
            `;

            botNavigation.appendChild(buttonBig);
        });


    }
}


function show_scanner_info(){
    console.log('calling show_scanner_info');

    const botInfoDisplay = document.getElementById('botInfoDisplay');

    if(botInfoDisplay){
        botInfoDisplay.style.display = "block";
        botInfoDisplay.innerHTML=`
        <h5 class="bot_header">${botView.current_scanner_info.title}</h5>
        <p class="bot_header">${botView.current_scanner_info.content}</p>
        `
    }

}

function show_about_base_navigation(){
    console.log('calling show_about_base_navigation');

    const botNavigation = document.getElementById("botNavigation");
    if (botNavigation){
        botNavigation.style.display = "block";

        botView.current_about_base_buttons.forEach(button => {
            const buttonBig = document.createElement('div');
            buttonBig.classList.add('bot_button_layer');
            buttonBig.innerHTML = `
                <input type="hidden" name="intent" value="${button.label}">
                <button class="bot_button" id="${button.id}" onclick="process_button_master(this)">
                    <div class="row">
                        <div class="col-8">
                            <span class="type-label">${button.label}</span>
                        </div>
                        <div class="col-4">
                            <span class="type_label"><i class="${button.icon}"></i></span>
                        </div>
                    </div>
                </button>
            `;

            botNavigation.appendChild(buttonBig);
        });


    }
}


function show_about_info(){
    console.log('calling show_about_info');

    const botInfoDisplay = document.getElementById('botInfoDisplay');

    if(botInfoDisplay){
        botInfoDisplay.style.display = "block";
        botInfoDisplay.innerHTML=`
        <h5 class="bot_header">${botView.current_about_info.title}</h5>
        <p class="bot_header">${botView.current_about_info.content}</p>
        `
    }
}


// Function to render the navigation buttons
function show_checkin_redeem_navigation() {
    console.log('calling show_checkin_redeem_navigation');

    const botNavigation = document.getElementById("botNavigation");
    if (botNavigation) {
        botNavigation.style.display = "block";

        // Clear previous buttons if any
        botNavigation.innerHTML = "";

        botView.current_checkin_redeem_buttons.forEach(button => {
            const buttonBig = document.createElement('div');
            buttonBig.classList.add('bot_button_layer');
            buttonBig.innerHTML = `
                <input type="hidden" name="intent" value="${button.label}">
                <button class="bot_button" id="${button.id}" onclick="process_button_master(this)">
                    <div class="row">
                        <div class="col-8">
                            <span class="type-label">${button.label}</span>
                        </div>
                        <div class="col-4">
                            <span class="type_label"><i class="${button.icon}"></i></span>
                        </div>
                    </div>
                </button>
            `;

            botNavigation.appendChild(buttonBig);
        });
    }
}


// Function to render the checkin/redeem info display
function show_checkin_redeem_info() {
    console.log('calling show_checkin_redeem_info');

    const botInfoDisplay = document.getElementById('botInfoDisplay');

    if (botInfoDisplay) {
        botInfoDisplay.style.display = "block";

        // Generate the select options
        const options = botView.current_checkin_redeem_info.input[0].list
            .map(option => `<option value="${option.value}" class="select_option">${option.label}</option>`)
            .join('');

        // Update the botInfoDisplay
        botInfoDisplay.innerHTML = `
            <h5 class="bot_header">${botView.current_checkin_redeem_info.title}</h5>
            <p class="bot_header">${botView.current_checkin_redeem_info.content}</p>
            <select class="bot_select">
                ${options}
            </select>
            <br>
            <br>
            <input 
                id="redeemInput" 
                placeholder="Code will appear here" 
                disabled 
                class="redeemInput"
            />
        `;
    }
}


// Function to handle the "Paste" button logic
function pasteRedeemCodeToInput() {
    console.log('Paste button clicked');

    const inputField = document.getElementById('redeemInput');

    if (inputField) {
        // Check if the Clipboard API is available
        if (navigator.clipboard && navigator.clipboard.readText) {
            navigator.clipboard.readText()
                .then(clipboardText => {
                    inputField.value = clipboardText; // Populate the input field with clipboard data
                    console.log('Clipboard data pasted:', clipboardText);
                })
                .catch(err => {
                    console.error('Failed to read clipboard data:', err);
                    inputField.value = 'Error: Unable to paste data';
                });
        } else {
            console.error('Clipboard API not supported');
            inputField.value = 'Error: Clipboard not supported';
        }
    }
}


function pastePurchaseCodeInput() {
    console.log('Paste button clicked for purchase');

    const inputField = document.getElementById('purchaseInput');

    if (inputField) {
        if (navigator.clipboard && navigator.clipboard.readText) {
            navigator.clipboard.readText()
                .then(clipboardText => {
                    inputField.value = clipboardText;
                    console.log('Clipboard data pasted:', clipboardText);
                })
                .catch(err => {
                    console.error('Failed to read clipboard data:', err);
                    inputField.value = 'Error: Unable to paste data';
                });
        } else {
            console.error('Clipboard API not supported');
            inputField.value = 'Error: Clipboard not supported';
        }
    }
}


// Adjust the height of the textarea dynamically
function adjustTextareaHeight(textarea) {
    textarea.style.height = 'auto'; // Reset height to recalculate
    textarea.style.height = textarea.scrollHeight + 'px'; // Set new height
}



function show_checkin_purchase_navigation(){
    console.log('calling show_checkin_purchase_navigation')

    if (botNavigation){
        botNavigation.style.display = "block";

        botView.current_checkin_purchase_buttons.forEach(button => {
            const buttonBig = document.createElement('div');
            buttonBig.classList.add('bot_button_layer');
            buttonBig.innerHTML = `
                <input type="hidden" name="intent" value="${button.label}">
                <button class="bot_button" id="${button.id}" onclick="process_button_master(this)">
                    <div class="row">
                        <div class="col-8">
                            <span class="type-label">${button.label}</span>
                        </div>
                        <div class="col-4">
                            <span class="type_label"><i class="${button.icon}"></i></span>
                        </div>
                    </div>
                </button>
            `;

            botNavigation.appendChild(buttonBig);
        });


    }

}


function show_checkin_purchase_info() {
    console.log('calling show_checkin_purchase_info');

    const botInfoDisplay = document.getElementById('botInfoDisplay');

    if (botInfoDisplay) {
        botInfoDisplay.style.display = "block";

        // Generate the select options
        const options = botView.current_checkin_purchase_info.input[0].list
            .map(option => `<option value="${option.value}" class="select_option">${option.label}</option>`)
            .join('');

        // Update the botInfoDisplay
        botInfoDisplay.innerHTML = `
            <h5 class="bot_header">${botView.current_checkin_purchase_info.title}</h5>
            <p class="bot_header">${botView.current_checkin_purchase_info.content}</p>
            <select class="bot_select">
                ${options}
            </select>
            <br>
            <br>
            <input 
                id="purchaseInput" 
                class="redeemInput" 
                placeholder="Message will appear here" 
                disabled
            >

            <br>
        `;
    }
}

